{"version":3,"file":"static/js/6769.d6a55f9b.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/account/pages/Account.tsx","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts"],"sourcesContent":["import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LogoutConfirm(props: PageProps<Extract<KcContext, { pageId: \"account.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        \"classes\": {\n            ...classes,\n            \"kcBodyClass\": clsx(classes?.kcBodyClass, \"user\")\n        }\n    });\n\n    const { url, realm, messagesPerField, stateChecker, account } = kcContext;\n\n    const { msg } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"account\">\n            <div className=\"row\">\n                <div className=\"col-md-10\">\n                    <h2>{msg(\"editAccountHtmlTitle\")}</h2>\n                </div>\n                <div className=\"col-md-2 subtitle\">\n                    <span className=\"subtitle\">\n                        <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                    </span>\n                </div>\n            </div>\n\n            <form action={url.accountUrl} className=\"form-horizontal\" method=\"post\">\n                <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n\n                {!realm.registrationEmailAsUsername && (\n                    <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"username\", \"has-error\"))}>\n                        <div className=\"col-sm-2 col-md-2\">\n                            <label htmlFor=\"username\" className=\"control-label\">\n                                {msg(\"username\")}\n                            </label>\n                            {realm.editUsernameAllowed && <span className=\"required\">*</span>}\n                        </div>\n\n                        <div className=\"col-sm-10 col-md-10\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"username\"\n                                name=\"username\"\n                                disabled={!realm.editUsernameAllowed}\n                                value={account.username ?? \"\"}\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"email\", \"has-error\"))}>\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"email\" className=\"control-label\">\n                            {msg(\"email\")}\n                        </label>{\" \"}\n                        <span className=\"required\">*</span>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" autoFocus value={account.email ?? \"\"} />\n                    </div>\n                </div>\n\n                <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"firstName\", \"has-error\"))}>\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"firstName\" className=\"control-label\">\n                            {msg(\"firstName\")}\n                        </label>{\" \"}\n                        <span className=\"required\">*</span>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"text\" className=\"form-control\" id=\"firstName\" name=\"firstName\" value={account.firstName ?? \"\"} />\n                    </div>\n                </div>\n\n                <div className={clsx(\"form-group\", messagesPerField.printIfExists(\"lastName\", \"has-error\"))}>\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"lastName\" className=\"control-label\">\n                            {msg(\"lastName\")}\n                        </label>{\" \"}\n                        <span className=\"required\">*</span>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"text\" className=\"form-control\" id=\"lastName\" name=\"lastName\" value={account.lastName ?? \"\"} />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div id=\"kc-form-buttons\" className=\"col-md-offset-2 col-md-10 submit\">\n                        <div>\n                            {url.referrerURI !== undefined && <a href={url.referrerURI}>${msg(\"backToApplication\")}</a>}\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                name=\"submitAction\"\n                                value=\"Save\"\n                            >\n                                {msg(\"doSave\")}\n                            </button>\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonDefaultClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                name=\"submitAction\"\n                                value=\"Cancel\"\n                            >\n                                {msg(\"doCancel\")}\n                            </button>\n                            I\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n"],"names":["useGetClassName","createUseClassName","undefined","LogoutConfirm","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","Object","assign","clsx","kcBodyClass","url","realm","messagesPerField","stateChecker","account","msg","_jsxs","active","children","className","_jsx","action","accountUrl","method","type","id","name","value","registrationEmailAsUsername","printIfExists","htmlFor","editUsernameAllowed","disabled","_a","username","autoFocus","_b","email","_c","firstName","_d","lastName","referrerURI","href","params","defaultClasses","useConstCallback","classKey","len","arguments","length","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert"],"sourceRoot":""}