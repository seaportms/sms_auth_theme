{"version":3,"file":"static/js/6898.f3c859da.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/rfc4648/lib/index.mjs","../node_modules/keycloakify/src/login/pages/WebauthnAuthenticate.tsx","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/rfc4648/lib/index.js"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","// Generated by rollup-plugin-mjs-entry\n\nimport cjs from './index.js';\n\nexport const base16 = cjs.base16;\nexport const base32 = cjs.base32;\nexport const base32hex = cjs.base32hex;\nexport const base64 = cjs.base64;\nexport const base64url = cjs.base64url;\nexport const codec = cjs.codec;\nexport default cjs;\n","import { useRef, useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport type { MessageKey } from \"keycloakify/login/i18n/i18n\";\nimport { base64url } from \"rfc4648\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function WebauthnAuthenticate(props: PageProps<Extract<KcContext, { pageId: \"webauthn-authenticate.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { url } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const { authenticators, challenge, shouldDisplayAuthenticators, userVerification, rpId } = kcContext;\n    const createTimeout = Number(kcContext.createTimeout);\n    const isUserIdentified = kcContext.isUserIdentified == \"true\";\n\n    const webAuthnAuthenticate = useConstCallback(async () => {\n        if (!isUserIdentified) {\n            return;\n        }\n        const allowCredentials = authenticators.authenticators.map(\n            authenticator =>\n                ({\n                    id: base64url.parse(authenticator.credentialId, { loose: true }),\n                    type: \"public-key\"\n                } as PublicKeyCredentialDescriptor)\n        );\n        // Check if WebAuthn is supported by this browser\n        if (!window.PublicKeyCredential) {\n            setError(msgStr(\"webauthn-unsupported-browser-text\"));\n            submitForm();\n            return;\n        }\n\n        const publicKey: PublicKeyCredentialRequestOptions = {\n            rpId,\n            challenge: base64url.parse(challenge, { loose: true })\n        };\n\n        if (createTimeout !== 0) {\n            publicKey.timeout = createTimeout * 1000;\n        }\n\n        if (allowCredentials.length) {\n            publicKey.allowCredentials = allowCredentials;\n        }\n\n        if (userVerification !== \"not specified\") {\n            publicKey.userVerification = userVerification;\n        }\n\n        try {\n            const resultRaw = await navigator.credentials.get({ publicKey });\n            if (!resultRaw || resultRaw.type != \"public-key\") return;\n            const result = resultRaw as PublicKeyCredential;\n            if (!(\"authenticatorData\" in result.response)) return;\n            const response = result.response as AuthenticatorAssertionResponse;\n            const clientDataJSON = response.clientDataJSON;\n            const authenticatorData = response.authenticatorData;\n            const signature = response.signature;\n\n            setClientDataJSON(base64url.stringify(new Uint8Array(clientDataJSON), { pad: false }));\n            setAuthenticatorData(base64url.stringify(new Uint8Array(authenticatorData), { pad: false }));\n            setSignature(base64url.stringify(new Uint8Array(signature), { pad: false }));\n            setCredentialId(result.id);\n            setUserHandle(base64url.stringify(new Uint8Array(response.userHandle!), { pad: false }));\n            submitForm();\n        } catch (err) {\n            setError(String(err));\n            submitForm();\n        }\n    });\n\n    const webAuthForm = useRef<HTMLFormElement>(null);\n    const submitForm = useConstCallback(() => {\n        webAuthForm.current!.submit();\n    });\n\n    const [clientDataJSON, setClientDataJSON] = useState(\"\");\n    const [authenticatorData, setAuthenticatorData] = useState(\"\");\n    const [signature, setSignature] = useState(\"\");\n    const [credentialId, setCredentialId] = useState(\"\");\n    const [userHandle, setUserHandle] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"webauthn-login-title\")}>\n            <div id=\"kc-form-webauthn\" className={getClassName(\"kcFormClass\")}>\n                <form id=\"webauth\" action={url.loginAction} ref={webAuthForm} method=\"post\">\n                    <input type=\"hidden\" id=\"clientDataJSON\" name=\"clientDataJSON\" value={clientDataJSON} />\n                    <input type=\"hidden\" id=\"authenticatorData\" name=\"authenticatorData\" value={authenticatorData} />\n                    <input type=\"hidden\" id=\"signature\" name=\"signature\" value={signature} />\n                    <input type=\"hidden\" id=\"credentialId\" name=\"credentialId\" value={credentialId} />\n                    <input type=\"hidden\" id=\"userHandle\" name=\"userHandle\" value={userHandle} />\n                    <input type=\"hidden\" id=\"error\" name=\"error\" value={error} />\n                </form>\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    {authenticators &&\n                        (() => (\n                            <form id=\"authn_select\" className={getClassName(\"kcFormClass\")}>\n                                {authenticators.authenticators.map(authenticator => (\n                                    <input type=\"hidden\" name=\"authn_use_chk\" value={authenticator.credentialId} key={authenticator.credentialId} />\n                                ))}\n                            </form>\n                        ))()}\n                    {authenticators &&\n                        shouldDisplayAuthenticators &&\n                        (() => (\n                            <>\n                                {authenticators.authenticators.length > 1 && (\n                                    <p className={getClassName(\"kcSelectAuthListItemTitle\")}>{msg(\"webauthn-available-authenticators\")}</p>\n                                )}\n                                <div className={getClassName(\"kcFormClass\")}>\n                                    {authenticators.authenticators.map(authenticator => (\n                                        <div id=\"kc-webauthn-authenticator\" className={getClassName(\"kcSelectAuthListItemClass\")}>\n                                            <div className={getClassName(\"kcSelectAuthListItemIconClass\")}>\n                                                <i\n                                                    className={clsx(\n                                                        (() => {\n                                                            const className = getClassName(authenticator.transports.iconClass as any);\n                                                            return className.includes(\" \")\n                                                                ? className\n                                                                : [className, getClassName(\"kcWebAuthnDefaultIcon\")];\n                                                        })(),\n                                                        getClassName(\"kcSelectAuthListItemIconPropertyClass\")\n                                                    )}\n                                                />\n                                            </div>\n                                            <div className={getClassName(\"kcSelectAuthListItemBodyClass\")}>\n                                                <div\n                                                    id=\"kc-webauthn-authenticator-label\"\n                                                    className={getClassName(\"kcSelectAuthListItemHeadingClass\")}\n                                                >\n                                                    {authenticator.label}\n                                                </div>\n\n                                                {authenticator.transports && authenticator.transports.displayNameProperties.length && (\n                                                    <div\n                                                        id=\"kc-webauthn-authenticator-transport\"\n                                                        className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}\n                                                    >\n                                                        {authenticator.transports.displayNameProperties.map(\n                                                            (transport: MessageKey, index: number) => (\n                                                                <>\n                                                                    <span>{msg(transport)}</span>\n                                                                    {index < authenticator.transports.displayNameProperties.length - 1 && (\n                                                                        <span>{\", \"}</span>\n                                                                    )}\n                                                                </>\n                                                            )\n                                                        )}\n                                                    </div>\n                                                )}\n\n                                                <div className={getClassName(\"kcSelectAuthListItemDescriptionClass\")}>\n                                                    <span id=\"kc-webauthn-authenticator-created-label\">{msg(\"webauthn-createdAt-label\")}</span>\n                                                    <span id=\"kc-webauthn-authenticator-created\">{authenticator.createdAt}</span>\n                                                </div>\n                                            </div>\n                                            <div className={getClassName(\"kcSelectAuthListItemFillClass\")} />\n                                        </div>\n                                    ))}\n                                </div>\n                            </>\n                        ))()}\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            id=\"authenticateWebAuthnButton\"\n                            type=\"button\"\n                            onClick={webAuthnAuthenticate}\n                            autoFocus={true}\n                            value={msgStr(\"webauthn-doAuthenticate\")}\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Template>\n    );\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nfunction parse(string, encoding, opts) {\n  var _opts$out;\n\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n\n    for (var i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  } // The string must have a whole number of bytes:\n\n\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError('Invalid padding');\n  } // Count the padding bytes:\n\n\n  var end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end; // If we get a whole number of bytes, there is too much padding:\n\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  } // Allocate the output:\n\n\n  var out = new ((_opts$out = opts.out) != null ? _opts$out : Uint8Array)(end * encoding.bits / 8 | 0); // Parse the data:\n\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  var written = 0; // Next byte to write\n\n  for (var _i = 0; _i < end; ++_i) {\n    // Read one character from the string:\n    var value = encoding.codes[string[_i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[_i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= encoding.bits || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\nfunction stringify(data, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = opts,\n      _opts$pad = _opts.pad,\n      pad = _opts$pad === void 0 ? true : _opts$pad;\n  var mask = (1 << encoding.bits) - 1;\n  var out = '';\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nvar base16Encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n};\nvar base32Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n};\nvar base32HexEncoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n};\nvar base64Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n};\nvar base64UrlEncoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n};\nvar base16 = {\n  parse: function parse$1(string, opts) {\n    return parse(string.toUpperCase(), base16Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base16Encoding, opts);\n  }\n};\nvar base32 = {\n  parse: function parse$1(string, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return parse(opts.loose ? string.toUpperCase().replace(/0/g, 'O').replace(/1/g, 'L').replace(/8/g, 'B') : string, base32Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32Encoding, opts);\n  }\n};\nvar base32hex = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base32HexEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32HexEncoding, opts);\n  }\n};\nvar base64 = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64Encoding, opts);\n  }\n};\nvar base64url = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar codec = {\n  parse: parse,\n  stringify: stringify\n};\n\nexports.base16 = base16;\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base64 = base64;\nexports.base64url = base64url;\nexports.codec = codec;\n"],"names":["createUseClassName","params","defaultClasses","useGetClassName","classes","getClassName","useConstCallback","classKey","clsx","undefined","base64url","cjs","WebauthnAuthenticate","props","kcContext","i18n","doUseDefaultCss","Template","url","msg","msgStr","authenticators","challenge","shouldDisplayAuthenticators","userVerification","rpId","createTimeout","Number","isUserIdentified","webAuthnAuthenticate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","allowCredentials","publicKey","resultRaw","result","response","_clientDataJSON","_authenticatorData","_signature","wrap","_context","prev","next","abrupt","map","authenticator","id","parse","credentialId","loose","type","window","PublicKeyCredential","setError","submitForm","timeout","length","navigator","credentials","get","sent","clientDataJSON","authenticatorData","signature","setClientDataJSON","stringify","Uint8Array","pad","setAuthenticatorData","setSignature","setCredentialId","setUserHandle","userHandle","t0","String","stop","webAuthForm","useRef","current","submit","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","error","_jsx","Object","assign","headerNode","children","_jsxs","className","action","loginAction","ref","method","name","value","_Fragment","transports","iconClass","includes","label","displayNameProperties","transport","index","createdAt","onClick","autoFocus","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","string","encoding","opts","_opts$out","codes","chars","bits","SyntaxError","end","out","buffer","written","_i","data","_opts$pad","mask","base16Encoding","base32Encoding","base32HexEncoding","base64Encoding","base64UrlEncoding","base16","toUpperCase","base32","replace","base32hex","base64","codec","exports"],"sourceRoot":""}